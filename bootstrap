#!/bin/sh
#
# NAME
#    bootstrap -- initialize/update docker environment
#
# SYNOPSIS
#    bootstrap
#    bootstrap shellinit
#
# DESCRIPTION
#    Execute this script without parameters to build the local docker
#    environment.  Once bootstrapped, dependent services are running
#    via docker-compose and the environment variables are written to
#    *build/test-environment* for future use.
#
#    Running this script with the _shellinit_ command line parameter
#    causes it to simply interrogate the running docker environment,
#    update *build/test-environment*, and print the environment to
#    the standard output stream in a shell executable manner.  This
#    makes the following pattern for setting environment variables
#    in the current shell work.
#
#        prompt% $(./bootstrap shellinit)
#
# vim: set ts=2 sts=2 sw=2 et:

if test -e /var/run/docker.sock
then
  DOCKER_IP=127.0.0.1
else
  $(boot2docker shellinit 2>/dev/null) || {
    echo "Failed to initialize docker environment"
    exit 2
  }
  DOCKER_IP=$(boot2docker ip)
fi

COMPOSE_ARGS=
if test -n "${DOCKER_COMPOSE_PREFIX}"
then
  COMPOSE_ARGS="-p ${DOCKER_COMPOSE_PREFIX}"
fi

get_exposed_port() {
  docker-compose $compose_args port $1 $2 | cut -d: -f2
}

build_env_file() {
  REDIS_PORT=$(get_exposed_port redis 6379)
  (echo "export DOCKER_COMPOSE_PREFIX=${DOCKER_COMPOSE_PREFIX}"
   echo "export REDIS_HOST=${DOCKER_IP}"
   echo "export REDIS_PORT=${REDIS_PORT}"
  ) > $1
}

set -e

test -d build || mkdir build

if test "$1" == 'shellinit'
then
  # just build the environment file from docker containers
  build_env_file build/test-environment
else
  # recreate the world!
  docker-compose ${COMPOSE_ARGS} stop
  docker-compose ${COMPOSE_ARGS} rm --force
  docker-compose ${COMPOSE_ARGS} up --allow-insecure-ssl -d

  # wait for redis to come on-line
  CONTAINER=$(docker-compose ${COMPOSE_ARGS} ps -q redis)
  while
    :
  do
    if docker exec -i ${CONTAINER} redis-cli info > /dev/null
    then
      break
    fi
    echo "Waiting on redis ${CONTAINER}..."
    sleep 2
  done

  build_env_file build/test-environment
fi
cat build/test-environment
